from services.db import dbInterface
from vkapi.main import Main as vkApp

add_receiver = "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è"
delete_receiver = "–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è"
my_uid = "–ú–æ–π id"
begin = "–ù–∞—á–∞—Ç—å"
send = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
add = "–¥–æ–±–∞–≤–∏—Ç—å"
msg_templates = {
    add_receiver: " {} –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å pdf",
    delete_receiver: " {} –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å pdf",
    "add_receiver_context": "–≤–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    "delete_receiver_context": "–≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É\n",
    "instruction": "–ü—Ä–∏–≤–µ—Ç! –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ pdf.\n\
    üìé–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –¥—Ä—É–≥–æ–º—É —á–µ–ª–æ–≤–µ–∫—É, –Ω–∞–∂–º–∏ ‚Ä¢–¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è‚Ä¢ –∏ –≤–≤–µ–¥–∏ –µ–≥–æ id.\n\
    üìç–¢–µ–ø–µ—Ä—å –æ–Ω —Ç–æ–∂–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Ç–≤–æ–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–∫–∞ —Ç—ã –µ–≥–æ –Ω–µ —É–¥–∞–ª–∏—à—å: –Ω–∞–∂–º–∏ ‚Ä¢—É–¥–∞–ª–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è‚Ä¢, –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏ —Ü–∏—Ñ—Ä—É.\n\
    üìå–û—Ç–ø—Ä–∞–≤–ª—è—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –ø–æ–¥–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∞–∫, –∫–∞–∫ –¥–æ–ª–∂–µ–Ω –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è –¥–æ–∫—É–º–µ–Ω—Ç. ",

}


class Command:
    def __init__(self, command: str, context: str, api: vkApp, db: dbInterface):
        self.command = command
        self.context = context
        self.api = api
        self.db = db
        if command == add_receiver:
            try:
                user = self.api.get_user_info(uid=int(context))
                receiver = self.db.add_linked_user(user)
                msg = msg_templates[add_receiver].format(receiver.first_name)
                self.api.send_message(msg)
            except Exception as e:
                print(e)
        if context == add_receiver:
            msg = msg_templates["add_receiver_context"]
            self.api.send_message(msg)
        if command == delete_receiver:
            try:
                user = self.db.del_linked_user(int(context))
                msg = msg_templates[delete_receiver].format(user.first_name)
                self.api.send_message(msg)
            except Exception as e:
                print("command {}, error:{}".format(delete_receiver, e))
        if context == delete_receiver:
            msg = msg_templates["delete_receiver_context"]
            count = 0
            for user in self.db.get_linked_user():
                msg += "{0} {1}\n".format(count, user.receiver.first_name)
                count += 1
            self.api.send_message(msg)
        if context == my_uid:
            self.api.send_message(self.api.uid)

        if context == begin:
            msg = msg_templates["instruction"]
            self.api.send_message(msg)